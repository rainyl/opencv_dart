// coverage:ignore-file
// opencv_dart - OpenCV bindings for Dart language
//    some c wrappers were from gocv: https://github.com/hybridgroup/gocv
//    License: Apache-2.0 https://github.com/hybridgroup/gocv/blob/release/LICENSE.txt
// Author: Rainyl
// License: Apache-2.0
// Date: 2024/01/28

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
@ffi.DefaultAsset('package:dartcv4/dartcv.dart')
library;

import 'dart:ffi' as ffi;
import 'package:dartcv4/src/g/types.g.dart' as imp$1;
import '' as self;

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        VecVecPoint, ffi.Pointer<GArrayGArrayPoint>)>()
external ffi.Pointer<CvStatus> GArrayGArrayPoint_FromVec(
  VecVecPoint points,
  ffi.Pointer<GArrayGArrayPoint> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(VecPoint, ffi.Pointer<GArrayPoint2d>)>()
external ffi.Pointer<CvStatus> GArrayPoint2d_FromVec(
  VecPoint v,
  ffi.Pointer<GArrayPoint2d> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(VecPoint, ffi.Pointer<GArrayPoint2f>)>()
external ffi.Pointer<CvStatus> GArrayPoint2f_FromVec(
  VecPoint v,
  ffi.Pointer<GArrayPoint2f> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(VecPoint, ffi.Pointer<GArrayPoint2i>)>()
external ffi.Pointer<CvStatus> GArrayPoint2i_FromVec(
  VecPoint v,
  ffi.Pointer<GArrayPoint2i> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(VecPoint, ffi.Pointer<GArrayPoint3d>)>()
external ffi.Pointer<CvStatus> GArrayPoint3d_FromVec(
  VecPoint v,
  ffi.Pointer<GArrayPoint3d> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(VecPoint, ffi.Pointer<GArrayPoint3f>)>()
external ffi.Pointer<CvStatus> GArrayPoint3f_FromVec(
  VecPoint v,
  ffi.Pointer<GArrayPoint3f> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(VecPoint, ffi.Pointer<GArrayPoint3i>)>()
external ffi.Pointer<CvStatus> GArrayPoint3i_FromVec(
  VecPoint v,
  ffi.Pointer<GArrayPoint3i> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(VecPoint, ffi.Pointer<GArrayPoint>)>()
external ffi.Pointer<CvStatus> GArrayPoint_FromVec(
  VecPoint v,
  ffi.Pointer<GArrayPoint> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(VecPrim, ffi.Pointer<GArrayPrim>)>()
external ffi.Pointer<CvStatus> GArrayPrim_FromVec(
  VecPrim v,
  ffi.Pointer<GArrayPrim> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(VecVec4i, ffi.Pointer<GArrayVec4i>)>()
external ffi.Pointer<CvStatus> GArrayVec4i_FromVec(
  VecVec4i v,
  ffi.Pointer<GArrayVec4i> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(CvPoint, Scalar, ffi.Int, ffi.Int, ffi.Int,
        ffi.Int, ffi.Pointer<Prim>)>()
external ffi.Pointer<CvStatus> Prim_from_Circle(
  CvPoint center,
  Scalar color,
  int lt,
  int radius,
  int shift,
  int thick,
  ffi.Pointer<Prim> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ffi.Pointer<ffi.Char>, ffi.Int, CvPoint,
        ffi.Int, Scalar, ffi.Pointer<Prim>)>()
external ffi.Pointer<CvStatus> Prim_from_FText(
  ffi.Pointer<ffi.Char> text,
  int text_len,
  CvPoint org,
  int fh,
  Scalar color,
  ffi.Pointer<Prim> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(CvPoint, Mat, Mat, ffi.Pointer<Prim>)>()
external ffi.Pointer<CvStatus> Prim_from_Image(
  CvPoint org,
  Mat img,
  Mat alpha,
  ffi.Pointer<Prim> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(Scalar, ffi.Int, CvPoint, CvPoint, ffi.Int,
        ffi.Int, ffi.Pointer<Prim>)>()
external ffi.Pointer<CvStatus> Prim_from_Line(
  Scalar color,
  int lt,
  CvPoint pt1,
  CvPoint pt2,
  int shift,
  int thick,
  ffi.Pointer<Prim> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ffi.Int, ffi.Int, CvRect, ffi.Pointer<Prim>)>()
external ffi.Pointer<CvStatus> Prim_from_Mosaic(
  int cellSz,
  int decim,
  CvRect mos,
  ffi.Pointer<Prim> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        VecPoint, Scalar, ffi.Int, ffi.Int, ffi.Int, ffi.Pointer<Prim>)>()
external ffi.Pointer<CvStatus> Prim_from_Poly(
  VecPoint points,
  Scalar color,
  int thick,
  int lt,
  int shift,
  ffi.Pointer<Prim> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Scalar, ffi.Int, CvRect, ffi.Int, ffi.Int, ffi.Pointer<Prim>)>()
external ffi.Pointer<CvStatus> Prim_from_Rect(
  Scalar color,
  int lt,
  CvRect rect,
  int shift,
  int thick,
  ffi.Pointer<Prim> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ffi.Bool,
        Scalar,
        ffi.Int,
        ffi.Double,
        ffi.Int,
        CvPoint,
        ffi.Pointer<ffi.Char>,
        ffi.Int,
        ffi.Int,
        ffi.Pointer<Prim>)>()
external ffi.Pointer<CvStatus> Prim_from_Text(
  bool bottom_left_origin,
  Scalar color,
  int ff,
  double fs,
  int lt,
  CvPoint org,
  ffi.Pointer<ffi.Char> text,
  int text_len,
  int thick,
  ffi.Pointer<Prim> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(VecPrim, Prim)>()
external ffi.Pointer<CvStatus> VecPrim_Append(
  VecPrim vec,
  Prim p,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(VecPrim, ffi.Int, ffi.Pointer<Prim>)>()
external ffi.Pointer<CvStatus> VecPrim_At(
  VecPrim vec,
  int idx,
  ffi.Pointer<Prim> rval,
);

@ffi.Native<ffi.Void Function(VecPrimPtr)>()
external void VecPrim_Close(
  VecPrimPtr vec,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ffi.Pointer<VecPrim>)>()
external ffi.Pointer<CvStatus> VecPrim_New(
  ffi.Pointer<VecPrim> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ffi.Pointer<Prim>, ffi.Int, ffi.Pointer<VecPrim>)>()
external ffi.Pointer<CvStatus> VecPrim_NewFromPointer(
  ffi.Pointer<Prim> points,
  int length,
  ffi.Pointer<VecPrim> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(VecPrim, ffi.Pointer<VecPrim>)>()
external ffi.Pointer<CvStatus> VecPrim_NewFromVec(
  VecPrim vec,
  ffi.Pointer<VecPrim> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(VecPrim, ffi.Pointer<ffi.Int>)>()
external ffi.Pointer<CvStatus> VecPrim_Size(
  VecPrim vec,
  ffi.Pointer<ffi.Int> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_BGR2Gray(
  GMat src,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_BGR2I420(
  GMat src,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_BGR2LUV(
  GMat src,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_BGR2RGB(
  GMat src,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_BGR2YUV(
  GMat src,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_BayerGR2RGB(
  GMat src_gr,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, ffi.Double, ffi.Double, ffi.Int, ffi.Bool, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_Canny(
  GMat image,
  double threshold1,
  double threshold2,
  int apertureSize,
  bool L2gradient,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Void Function(GComputationPtr)>()
external void gapi_GComputation_Close(
  GComputationPtr self,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, GMat, ffi.Pointer<GComputation>)>()
external ffi.Pointer<CvStatus> gapi_GComputation_New(
  GMat in$,
  GMat out,
  ffi.Pointer<GComputation> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, GScalar, ffi.Pointer<GComputation>)>()
external ffi.Pointer<CvStatus> gapi_GComputation_New_1(
  GMat in$,
  GScalar out,
  ffi.Pointer<GComputation> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, GMat, GMat, ffi.Pointer<GComputation>)>()
external ffi.Pointer<CvStatus> gapi_GComputation_New_2(
  GMat in1,
  GMat in2,
  GMat out,
  ffi.Pointer<GComputation> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, GMat, GScalar, ffi.Pointer<GComputation>)>()
external ffi.Pointer<CvStatus> gapi_GComputation_New_3(
  GMat in1,
  GMat in2,
  GScalar out,
  ffi.Pointer<GComputation> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GComputation, Mat, imp$1.CvCallback_1)>()
external ffi.Pointer<CvStatus> gapi_GComputation_apply(
  GComputation self,
  Mat in$,
  imp$1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GComputation, Mat, ffi.Pointer<Scalar>)>()
external ffi.Pointer<CvStatus> gapi_GComputation_apply_1(
  GComputation self,
  Mat in$,
  ffi.Pointer<Scalar> out,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GComputation, Mat, Mat, ffi.Pointer<Mat>)>()
external ffi.Pointer<CvStatus> gapi_GComputation_apply_2(
  GComputation self,
  Mat in1,
  Mat in2,
  ffi.Pointer<Mat> out,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GComputation, Mat, Mat, ffi.Pointer<Scalar>)>()
external ffi.Pointer<CvStatus> gapi_GComputation_apply_3(
  GComputation self,
  Mat in1,
  Mat in2,
  ffi.Pointer<Scalar> out,
);

@ffi.Native<ffi.Void Function(GMatPtr)>()
external void gapi_GMat_Close(
  GMatPtr mat,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_GMat_New_Empty(
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_GMat_New_FromMat(
  Mat mat,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Void Function(GScalarPtr)>()
external void gapi_GScalar_Close(
  GScalarPtr scalar,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ffi.Pointer<GScalar>)>()
external ffi.Pointer<CvStatus> gapi_GScalar_New_Empty(
  ffi.Pointer<GScalar> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ffi.Double, ffi.Pointer<GScalar>)>()
external ffi.Pointer<CvStatus> gapi_GScalar_New_FromDouble(
  double v0,
  ffi.Pointer<GScalar> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Scalar, ffi.Pointer<GScalar>)>()
external ffi.Pointer<CvStatus> gapi_GScalar_New_FromScalar(
  Scalar scalar,
  ffi.Pointer<GScalar> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_I4202BGR(
  GMat src,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_I4202RGB(
  GMat src,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, Mat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_LUT(
  GMat src,
  Mat lut,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_LUV2BGR(
  GMat src,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, ffi.Int, ffi.Int, ffi.Double,
        ffi.Double, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_Laplacian(
  GMat src,
  int ddepth,
  int ksize,
  double scale,
  double delta,
  int borderType,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_NV12toBGR(
  GMat src_y,
  GMat src_uv,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_NV12toBGRp(
  GMat src_y,
  GMat src_uv,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_NV12toGray(
  GMat src_y,
  GMat src_uv,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_NV12toRGB(
  GMat src_y,
  GMat src_uv,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_NV12toRGBp(
  GMat src_y,
  GMat src_uv,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_RGB2Gray(
  GMat src,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, ffi.Float, ffi.Float, ffi.Float, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_RGB2Gray_1(
  GMat src,
  double rY,
  double gY,
  double bY,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_RGB2HSV(
  GMat src,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_RGB2I420(
  GMat src,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_RGB2Lab(
  GMat src,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_RGB2YUV(
  GMat src,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_RGB2YUV422(
  GMat src,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, ffi.Int, ffi.Int, ffi.Int, ffi.Int,
        ffi.Double, ffi.Double, ffi.Int, Scalar, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_Sobel(
  GMat src,
  int ddepth,
  int dx,
  int dy,
  int ksize,
  double scale,
  double delta,
  int borderType,
  Scalar borderValue,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, ffi.Int, ffi.Int, ffi.Int, ffi.Double,
        ffi.Double, ffi.Int, Scalar, ffi.Pointer<GMat>, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_SobelXY(
  GMat src,
  int ddepth,
  int order,
  int ksize,
  double scale,
  double delta,
  int borderType,
  Scalar borderValue,
  ffi.Pointer<GMat> rval,
  ffi.Pointer<GMat> rval1,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_YUV2BGR(
  GMat src,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_YUV2RGB(
  GMat src,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, GMat, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_add(
  GMat src1,
  GMat src2,
  int ddepth,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, GScalar, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_addC(
  GMat src,
  GScalar c,
  int ddepth,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GScalar, GMat, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_addC_1(
  GScalar c,
  GMat src,
  int ddepth,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, ffi.Int, ffi.Double, ffi.Double, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_bilateralFilter(
  GMat src,
  int d,
  double sigmaColor,
  double sigmaSpace,
  int borderType,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, CvSize, CvPoint, ffi.Int, Scalar, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_blur(
  GMat src,
  CvSize ksize,
  CvPoint anchor,
  int borderType,
  Scalar borderValue,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GArrayPoint2f, ffi.Pointer<GOpaqueRect>)>()
external ffi.Pointer<CvStatus> gapi_boundingRect(
  GArrayPoint2f src,
  ffi.Pointer<GOpaqueRect> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GArrayPoint2i, ffi.Pointer<GOpaqueRect>)>()
external ffi.Pointer<CvStatus> gapi_boundingRect_1(
  GArrayPoint2i src,
  ffi.Pointer<GOpaqueRect> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GOpaqueRect>)>()
external ffi.Pointer<CvStatus> gapi_boundingRect_2(
  GMat src,
  ffi.Pointer<GOpaqueRect> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, ffi.Int, CvSize, CvPoint, ffi.Bool,
        ffi.Int, Scalar, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_boxFilter(
  GMat src,
  int dtype,
  CvSize ksize,
  CvPoint anchor,
  bool normalize,
  int borderType,
  Scalar borderValue,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, GMat, ffi.Bool, ffi.Pointer<GMat>, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_cartToPolar(
  GMat x,
  GMat y,
  bool angleInDegrees,
  ffi.Pointer<GMat> rval,
  ffi.Pointer<GMat> rval1,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_concatHor(
  GMat src1,
  GMat src2,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_concatVert(
  GMat src1,
  GMat src2,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, ffi.Int, ffi.Double, ffi.Double, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_convertTo(
  GMat src,
  int rdepth,
  double alpha,
  double beta,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_copy_1(
  GMat in$,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, CvRect, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_crop(
  GMat src,
  CvRect rect,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, Mat, CvPoint, ffi.Int, ffi.Int, Scalar, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_dilate(
  GMat src,
  Mat kernel,
  CvPoint anchor,
  int iterations,
  int borderType,
  Scalar borderValue,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, ffi.Int, ffi.Int, Scalar, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_dilate3x3(
  GMat src,
  int iterations,
  int borderType,
  Scalar borderValue,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, GMat, ffi.Double, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_div(
  GMat src1,
  GMat src2,
  double scale,
  int ddepth,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, GScalar, ffi.Double, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_divC(
  GMat src,
  GScalar divisor,
  double scale,
  int ddepth,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GScalar, GMat, ffi.Double, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_divRC(
  GScalar divident,
  GMat src,
  double scale,
  int ddepth,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, Mat, CvPoint, ffi.Int, ffi.Int, Scalar, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_erode(
  GMat src,
  Mat kernel,
  CvPoint anchor,
  int iterations,
  int borderType,
  Scalar borderValue,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, ffi.Int, ffi.Int, Scalar, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_erode3x3(
  GMat src,
  int iterations,
  int borderType,
  Scalar borderValue,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, ffi.Int, Mat, CvPoint, Scalar, ffi.Int,
        Scalar, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_filter2D(
  GMat src,
  int ddepth,
  Mat kernel,
  CvPoint anchor,
  Scalar delta,
  int borderType,
  Scalar borderValue,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, ffi.Int, ffi.Int, ffi.Pointer<GArrayGArrayPoint>)>()
external ffi.Pointer<CvStatus> gapi_findContours(
  GMat src,
  int mode,
  int method,
  ffi.Pointer<GArrayGArrayPoint> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, ffi.Int, ffi.Int,
        ffi.Pointer<GArrayGArrayPoint>, ffi.Pointer<GArrayVec4i>)>()
external ffi.Pointer<CvStatus> gapi_findContoursH(
  GMat src,
  int mode,
  int method,
  ffi.Pointer<GArrayGArrayPoint> rval,
  ffi.Pointer<GArrayVec4i> rval1,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, ffi.Int, ffi.Int, GOpaquePoint,
        ffi.Pointer<GArrayGArrayPoint>, ffi.Pointer<GArrayVec4i>)>()
external ffi.Pointer<CvStatus> gapi_findContoursH_1(
  GMat src,
  int mode,
  int method,
  GOpaquePoint offset,
  ffi.Pointer<GArrayGArrayPoint> rval,
  ffi.Pointer<GArrayVec4i> rval1,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, ffi.Int, ffi.Int, GOpaquePoint, ffi.Pointer<GArrayGArrayPoint>)>()
external ffi.Pointer<CvStatus> gapi_findContours_1(
  GMat src,
  int mode,
  int method,
  GOpaquePoint offset,
  ffi.Pointer<GArrayGArrayPoint> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GArrayPoint2d, ffi.Int, ffi.Double,
        ffi.Double, ffi.Double, ffi.Pointer<GOpaqueVec4f>)>()
external ffi.Pointer<CvStatus> gapi_fitLine2D(
  GArrayPoint2d src,
  int distType,
  double param,
  double reps,
  double aeps,
  ffi.Pointer<GOpaqueVec4f> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GArrayPoint2f, ffi.Int, ffi.Double,
        ffi.Double, ffi.Double, ffi.Pointer<GOpaqueVec4f>)>()
external ffi.Pointer<CvStatus> gapi_fitLine2D_1(
  GArrayPoint2f src,
  int distType,
  double param,
  double reps,
  double aeps,
  ffi.Pointer<GOpaqueVec4f> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GArrayPoint2i, ffi.Int, ffi.Double,
        ffi.Double, ffi.Double, ffi.Pointer<GOpaqueVec4f>)>()
external ffi.Pointer<CvStatus> gapi_fitLine2D_2(
  GArrayPoint2i src,
  int distType,
  double param,
  double reps,
  double aeps,
  ffi.Pointer<GOpaqueVec4f> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, ffi.Int, ffi.Double, ffi.Double,
        ffi.Double, ffi.Pointer<GOpaqueVec4f>)>()
external ffi.Pointer<CvStatus> gapi_fitLine2D_3(
  GMat src,
  int distType,
  double param,
  double reps,
  double aeps,
  ffi.Pointer<GOpaqueVec4f> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GArrayPoint3d, ffi.Int, ffi.Double,
        ffi.Double, ffi.Double, ffi.Pointer<GOpaqueVec4f>)>()
external ffi.Pointer<CvStatus> gapi_fitLine3D_1(
  GArrayPoint3d src,
  int distType,
  double param,
  double reps,
  double aeps,
  ffi.Pointer<GOpaqueVec4f> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GArrayPoint3f, ffi.Int, ffi.Double,
        ffi.Double, ffi.Double, ffi.Pointer<GOpaqueVec4f>)>()
external ffi.Pointer<CvStatus> gapi_fitLine3D_2(
  GArrayPoint3f src,
  int distType,
  double param,
  double reps,
  double aeps,
  ffi.Pointer<GOpaqueVec4f> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GArrayPoint3i, ffi.Int, ffi.Double,
        ffi.Double, ffi.Double, ffi.Pointer<GOpaqueVec4f>)>()
external ffi.Pointer<CvStatus> gapi_fitLine3D_3(
  GArrayPoint3i src,
  int distType,
  double param,
  double reps,
  double aeps,
  ffi.Pointer<GOpaqueVec4f> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, ffi.Int, ffi.Double, ffi.Double,
        ffi.Double, ffi.Pointer<GOpaqueVec4f>)>()
external ffi.Pointer<CvStatus> gapi_fitLine3D_4(
  GMat src,
  int distType,
  double param,
  double reps,
  double aeps,
  ffi.Pointer<GOpaqueVec4f> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_flip(
  GMat src,
  int flipCode,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, CvSize, ffi.Double, ffi.Double,
        ffi.Int, Scalar, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_gaussianBlur(
  GMat src,
  CvSize ksize,
  double sigmaX,
  double sigmaY,
  int borderType,
  Scalar borderValue,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, ffi.Int, ffi.Double, ffi.Double, Mat,
        ffi.Int, ffi.Bool, ffi.Double)>()
external ffi.Pointer<CvStatus> gapi_goodFeaturesToTrack(
  GMat image,
  int maxCorners,
  double qualityLevel,
  double minDistance,
  Mat mask,
  int blockSize,
  bool useHarrisDetector,
  double k,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_mask(
  GMat src,
  GMat mask,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GScalar>)>()
external ffi.Pointer<CvStatus> gapi_mean(
  GMat src,
  ffi.Pointer<GScalar> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_medianBlur(
  GMat src,
  int ksize,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, GMat, GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_merge3(
  GMat src1,
  GMat src2,
  GMat src3,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, GMat, GMat, GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_merge4(
  GMat src1,
  GMat src2,
  GMat src3,
  GMat src4,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, ffi.Int, Mat, CvPoint, ffi.Int,
        ffi.Int, Scalar, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_morphologyEx(
  GMat src,
  int op,
  Mat kernel,
  CvPoint anchor,
  int iterations,
  int borderType,
  Scalar borderValue,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, GMat, ffi.Double, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_mul(
  GMat src1,
  GMat src2,
  double scale,
  int ddepth,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, GScalar, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_mulC(
  GMat src,
  GScalar multiplier,
  int ddepth,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, ffi.Double, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_mulC_1(
  GMat src,
  double multiplier,
  int ddepth,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GScalar, GMat, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_mulC_2(
  GScalar multiplier,
  GMat src,
  int ddepth,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, ffi.Double, ffi.Double, ffi.Int, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_normalize(
  GMat src,
  double alpha,
  double beta,
  int norm_type,
  int ddepth,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, GMat, ffi.Bool, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_phase(
  GMat x,
  GMat y,
  bool angleInDegrees,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, GMat, ffi.Bool, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_polarToCart(
  GMat magnitude,
  GMat angle,
  bool angleInDegrees,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, Mat, Mat, ffi.Int, ffi.Int, Scalar, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_remap(
  GMat src,
  Mat map1,
  Mat map2,
  int interpolation,
  int borderMode,
  Scalar borderValue,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, CvSize, ffi.Double, ffi.Double, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_resize(
  GMat src,
  CvSize dsize,
  double fx,
  double fy,
  int interpolation,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, CvSize, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_resizeP(
  GMat src,
  CvSize dsize,
  int interpolation,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, ffi.Int, Mat, Mat, CvPoint, Scalar,
        ffi.Int, Scalar, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_sepFilter(
  GMat src,
  int ddepth,
  Mat kernelX,
  Mat kernelY,
  CvPoint anchor,
  Scalar delta,
  int borderType,
  Scalar borderValue,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, ffi.Pointer<GMat>, ffi.Pointer<GMat>, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_split3(
  GMat src,
  ffi.Pointer<GMat> rval,
  ffi.Pointer<GMat> rval1,
  ffi.Pointer<GMat> rval2,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>, ffi.Pointer<GMat>,
        ffi.Pointer<GMat>, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_split4(
  GMat src,
  ffi.Pointer<GMat> rval,
  ffi.Pointer<GMat> rval1,
  ffi.Pointer<GMat> rval2,
  ffi.Pointer<GMat> rval3,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GMat, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_sqrt(
  GMat src,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, GMat, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_sub(
  GMat src1,
  GMat src2,
  int ddepth,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GMat, GScalar, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_subC(
  GMat src,
  GScalar c,
  int ddepth,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GScalar, GMat, ffi.Int, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_subRC(
  GScalar c,
  GMat src,
  int ddepth,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, Mat, CvSize, ffi.Int, ffi.Int, Scalar, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_warpAffine(
  GMat src,
  Mat M,
  CvSize dsize,
  int flags,
  int borderMode,
  Scalar borderValue,
  ffi.Pointer<GMat> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GMat, Mat, CvSize, ffi.Int, ffi.Int, Scalar, ffi.Pointer<GMat>)>()
external ffi.Pointer<CvStatus> gapi_warpPerspective(
  GMat src,
  Mat M,
  CvSize dsize,
  int flags,
  int borderMode,
  Scalar borderValue,
  ffi.Pointer<GMat> rval,
);

const addresses = _SymbolAddresses();

class _SymbolAddresses {
  const _SymbolAddresses();
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(VecPrimPtr)>>
      get VecPrim_Close => ffi.Native.addressOf(self.VecPrim_Close);
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(GComputationPtr)>>
      get gapi_GComputation_Close =>
          ffi.Native.addressOf(self.gapi_GComputation_Close);
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(GMatPtr)>>
      get gapi_GMat_Close => ffi.Native.addressOf(self.gapi_GMat_Close);
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(GScalarPtr)>>
      get gapi_GScalar_Close => ffi.Native.addressOf(self.gapi_GScalar_Close);
}

typedef CvPoint = imp$1.CvPoint;
typedef CvRect = imp$1.CvRect;
typedef CvSize = imp$1.CvSize;
typedef CvStatus = imp$1.CvStatus;

final class GArrayGArrayPoint extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef GArrayGArrayPointPtr = ffi.Pointer<GArrayGArrayPoint>;

final class GArrayPoint extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

final class GArrayPoint2d extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef GArrayPoint2dPtr = ffi.Pointer<GArrayPoint2d>;

final class GArrayPoint2f extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef GArrayPoint2fPtr = ffi.Pointer<GArrayPoint2f>;

final class GArrayPoint2i extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef GArrayPoint2iPtr = ffi.Pointer<GArrayPoint2i>;

final class GArrayPoint3d extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef GArrayPoint3dPtr = ffi.Pointer<GArrayPoint3d>;

final class GArrayPoint3f extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef GArrayPoint3fPtr = ffi.Pointer<GArrayPoint3f>;

final class GArrayPoint3i extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef GArrayPoint3iPtr = ffi.Pointer<GArrayPoint3i>;
typedef GArrayPointPtr = ffi.Pointer<GArrayPoint>;

final class GArrayPrim extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef GArrayPrimPtr = ffi.Pointer<GArrayPrim>;

final class GArrayVec4i extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef GArrayVec4iPtr = ffi.Pointer<GArrayVec4i>;

final class GComputation extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef GComputationPtr = ffi.Pointer<GComputation>;

final class GFrame extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef GFramePtr = ffi.Pointer<GFrame>;

final class GMat extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef GMatPtr = ffi.Pointer<GMat>;

final class GOpaquePoint extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef GOpaquePointPtr = ffi.Pointer<GOpaquePoint>;

final class GOpaqueRect extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef GOpaqueRectPtr = ffi.Pointer<GOpaqueRect>;

final class GOpaqueVec4f extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef GOpaqueVec4fPtr = ffi.Pointer<GOpaqueVec4f>;

final class GOpaqueVec6f extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef GOpaqueVec6fPtr = ffi.Pointer<GOpaqueVec6f>;

final class GScalar extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef GScalarPtr = ffi.Pointer<GScalar>;
typedef Mat = imp$1.Mat;

final class Prim extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef PrimPtr = ffi.Pointer<Prim>;
typedef Prims = VecPrim;
typedef Scalar = imp$1.Scalar;

final class VecGMat extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef VecGMatPtr = ffi.Pointer<VecGMat>;
typedef VecPoint = imp$1.VecPoint;

final class VecPrim extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef VecPrimPtr = ffi.Pointer<VecPrim>;
typedef VecVec4i = imp$1.VecVec4i;
typedef VecVecPoint = imp$1.VecVecPoint;
